<?xml version="1.0" encoding="UTF-8"?>
<metadata>
  <idinfo>
    <citation>
      <citeinfo>
        <origin>Jordan S. Read</origin>
        <origin>Xiaowei Jia</origin>
        <origin>Jared Willard</origin>
        <origin>Alison P. Appling</origin>
        <origin>Jacob A. Zwart</origin>
        <origin>Samantha K. Oliver</origin>
        <origin>Anuj Karpatne</origin>
        <origin>Gretchen J.A. Hansen</origin>
        <origin>Paul C. Hanson</origin>
        <origin>William Watkins</origin>
        <origin>Michael Steinbach</origin>
        <origin>Vipin Kumar</origin>
        <pubdate>2019</pubdate>
        <title>Process-guided deep learning water temperature predictions: 5c All lakes historical prediction data</title>
        <geoform/>
        <pubinfo>
          <pubplace>Online (digital release)</pubplace>
          <publish>U.S. Geological Survey</publish>
        </pubinfo>
        <onlink>http://dx.doi.org/10.5066/P9AQPIVD</onlink>
        <lworkcit>
          <citeinfo>
            <origin>Jordan S. Read</origin>
            <origin>Xiaowei Jia</origin>
            <origin>Jared Willard</origin>
            <origin>Alison P. Appling</origin>
            <origin>Jacob A. Zwart</origin>
            <origin>Samantha K. Oliver</origin>
            <origin>Anuj Karpatne</origin>
            <origin>Gretchen J.A. Hansen</origin>
            <origin>Paul C. Hanson</origin>
            <origin>William Watkins</origin>
            <origin>Michael Steinbach</origin>
            <origin>Vipin Kumar</origin>
            <pubdate>2019</pubdate>
            <title>Process-guided deep learning predictions of lake water temperature</title>
          </citeinfo>
        </lworkcit>
      </citeinfo>
    </citation>
    <descript>
      <abstract>Multiple modeling frameworks were used to predict daily temperatures at 0.5m depth intervals for a set of diverse lakes in the U.S. states of Minnesota and Wisconsin. Process-Based (PB) models were configured and calibrated with training data to reduce root-mean squared error. Uncalibrated models used default configurations (PB0; see Winslow et al. 2016 for details) and no parameters were adjusted according to model fit with observations. Deep Learning (DL) models were Long Short-Term Memory artificial recurrent neural network models which used training data to adjust model structure and weights for temperature predictions (Jia et al. 2019). Process-Guided Deep Learning (PGDL) models were DL models with an added physical constraint for energy conservation as a loss term. These models were pre-trained with uncalibrated Process-Based model outputs (PB0) before training on actual temperature observations. Zip files for each lake contain four files, one for each of PB, PB0, DL, and PGDL.</abstract>
      <purpose>Fisheries biology, limnological research, and climate science.</purpose>
    </descript>
    <timeperd>
      <timeinfo>
        <rngdates>
          <begdate>19800401</begdate>
          <enddate>20181231</enddate>
        </rngdates>
      </timeinfo>
      <current>model estimates</current>
    </timeperd>
    <status>
      <progress>Complete</progress>
      <update>none planned</update>
    </status>
    <spdom>
      <descgeog>Lake polygons as defined by the national hydrography dataset medium resolution</descgeog>
      <bounding>
        <westbc>-94.2609062307949</westbc>
        <eastbc>-87.9475441739278</eastbc>
        <northbc>48.6427837911633</northbc>
        <southbc>42.5692312672573</southbc>
      </bounding>
    </spdom>
    <keywords>
      <theme>
        <themekt>none</themekt>
        <themekey>machine learning</themekey>
        <themekey>deep learning</themekey>
        <themekey>hybrid modeling</themekey>
        <themekey>water</themekey>
        <themekey>temperature</themekey>
        <themekey>temperate lakes</themekey>
        <themekey>reservoirs</themekey>
        <themekey>modeling</themekey>
        <themekey>climate change</themekey>
        <themekey>thermal profiles</themekey>
      </theme>
      <theme>
        <themekt>ISO 19115 Topic Category</themekt>
        <themekey>environment</themekey>
        <themekey>inlandWaters</themekey>
        <themekey>007</themekey>
        <themekey>012</themekey>
      </theme>
      <place>
        <placekt>Department of Commerce, 1995, Countries, Dependencies, Areas of Special Sovereignty, and Their Principal Administrative Divisions,  Federal Information Processing Standard (FIPS) 10-4, Washington, D.C., National Institute of Standards and Technology</placekt>
        <placekey>United States</placekey>
        <placekey>US</placekey>
      </place>
      <place>
        <placekt>U.S. Department of Commerce, 1987, Codes for the identification of the States, the District of Columbia and the outlying areas of the United States, and associated areas (Federal Information Processing Standard 5-2): Washington, D. C., NIST</placekt>
        <placekey>Minnesota</placekey>
        <placekey>MN</placekey>
        <placekey>Wisconsin</placekey>
        <placekey>WI</placekey>
      </place>
    </keywords>
    <accconst>none</accconst>
    <useconst>These data are subject to change and are not citable until reviewed and approved for official publication by the USGS</useconst>
    <ptcontac>
      <cntinfo>
        <cntperp>
          <cntper>Jordan S. Read</cntper>
          <cntorg>U.S. Geological Survey</cntorg>
        </cntperp>
        <cntpos>Research Civil Engineer</cntpos>
        <cntaddr>
          <addrtype>Mailing and Physical</addrtype>
          <address>8505 Research Way</address>
          <city>Middleton</city>
          <state>WI</state>
          <postal>53562</postal>
          <country>U.S.A.</country>
        </cntaddr>
        <cntvoice>608-821-3922</cntvoice>
        <cntemail>jread@usgs.gov</cntemail>
      </cntinfo>
    </ptcontac>
    <datacred>This study was funded by the Department of the Interior Northeast Climate Adaptation Science Center, the United States Geological Survey National Climate This research used resources of the Core Science Analytics and Synthesis Advanced Research Computing program at the U.S. Geological Survey.</datacred>
    <native>For PB and PB0 predictions we used USGS Advanced Research Computing, USGS Yeti Supercomputer (https://doi.org/10.5066/F7D798MJ); process-based predictions were generated with the following open source tools available in the R programming language (R version 3.5.0 (2018-04-23)).\n The computing platform for generating data and metadata was x86_64-redhat-linux-gnu. R packages loaded into this environment: dplyr, version: 0.8.1; glmtools, version: 0.15.0; rLakeAnalyzer, version: 1.11.4; GLMr, version: 3.1.14; readr, version: 1.3.1; Yeti modules tools/nco-4.7.8-gnu; tools/netcdf-4.3.2-gnu For PGDL and DL predictions, the University of Minnesota Supercomputing Institute resources were used. For for detailed study of Sparkling Lake and Lake Mendota PGDL and DL; process-guided deep learning predictions and deep learning were generated with the following open source tools available in the Python install channels: pytorch, conda-forge, defaults. Python dependencies: _ipyw_jlab_nb_ext_conf=0.1.0=py27h08a7f0c_0, _tflow_190_select=0.0.1=gpu, _tflow_select=2.1.0=gpu, alabaster=0.7.10=py27he5a193a_0, anaconda-client=1.6.14=py27_0, anaconda-navigator=1.8.7=py27_0, anaconda-project=0.8.2=py27h236b58a_0, arrow-cpp=0.11.1=py27h3bd774a_0, asn1crypto=0.24.0=py27_0, astor=0.7.1=py27_0, astroid=1.6.3=py27_0, astropy=2.0.6=py27h3010b51_1, attrs=18.1.0=py27_0, babel=2.5.3=py27_0, backports=1.0=py27h63c9359_1, backports.functools_lru_cache=1.5=py27_1, backports.shutil_get_terminal_size=1.0.0=py27h5bc021e_2, backports.weakref=1.0.post1=py27_0, backports_abc=0.5=py27h7b3c97b_0, beautifulsoup4=4.6.0=py27h3f86ba9_1, bitarray=0.8.1=py27h14c3975_1, bkcharts=0.2=py27h241ae91_0, blas=1.0=mkl, blaze=0.11.3=py27h5f341da_0, bleach=1.5.0=py27_0, blosc=1.14.3=hdbcaa40_0, bokeh=0.12.16=py27_0, boost-cpp=1.68.0=h3a22d5f_0, boto=2.48.0=py27h9556ac2_1, bottleneck=1.2.1=py27h21b16a3_0, bzip2=1.0.6=h14c3975_5, ca-certificates=2019.1.23=0, cairo=1.14.12=h8948797_3, cdecimal=2.3=py27h14c3975_3, certifi=2019.3.9=py27_0, cffi=1.11.5=py27h9745a5d_0, chardet=3.0.4=py27hfa10054_1, click=6.7=py27h4225b90_0, cloudpickle=0.5.3=py27_0, clyent=1.2.2=py27h7276e6c_1, colorama=0.3.9=py27h5cde069_0, conda=4.6.8=py27_0, conda-build=3.10.5=py27_0, conda-env=2.6.0=h36134e3_1, conda-verify=2.0.0=py27hf052a9d_0, configparser=3.5.0=py27h5117587_0, contextlib2=0.5.5=py27hbf4c468_0, cryptography=2.6.1=py27h1ba5d50_0, cuda90=1.0=h6433d27_0, cudatoolkit=9.0=h13b8566_0, cudnn=7.1.2=cuda9.0_0, cupti=9.0.176=0, curl=7.64.0=hbc83047_2, cycler=0.10.0=py27hc7354d3_0, cython=0.28.2=py27h14c3975_0, cytoolz=0.9.0.1=py27h14c3975_0, dask=0.17.5=py27_0, dask-core=0.17.5=py27_0, datashape=0.5.4=py27hf507385_0, dbus=1.13.2=h714fa37_1, decorator=4.3.0=py27_0, distributed=1.21.8=py27_0, docutils=0.14=py27hae222c1_0, entrypoints=0.2.3=py27h502b47d_2, enum34=1.1.6=py27h99a27e9_1, et_xmlfile=1.0.1=py27h75840f5_0, expat=2.2.6=he6710b0_0, fastcache=1.0.2=py27h14c3975_2, feather-format=0.4.0=py_1003, filelock=3.0.4=py27_0, flask=1.0.2=py27_1, flask-cors=3.0.4=py27_0, fontconfig=2.13.0=h9420a91_0, freetype=2.9.1=h8a8886c_1, fribidi=1.0.5=h7b6447c_0, funcsigs=1.0.2=py27h83f16ab_0, functools32=3.2.3.2=py27h4ead58f_1, futures=3.2.0=py27h7b459c0_0, get_terminal_size=1.0.0=haa9412d_0, gevent=1.3.0=py27h14c3975_0, glib=2.56.2=hd408876_0, glob2=0.6=py27hcea9cbd_0, gmp=6.1.2=h6c8ec71_1, gmpy2=2.0.8=py27h4cf3fa8_2, graphite2=1.3.11=h16798f4_2, greenlet=0.4.13=py27h14c3975_0, grin=1.2.1=py27_4, gst-plugins-base=1.14.0=hbbd80ab_1, gstreamer=1.14.0=hb453b48_1, h5py=2.7.1=py27ha1f6525_2, harfbuzz=1.8.8=hffaf4a1_0, hdf5=1.10.2=hba1933b_1, heapdict=1.0.0=py27_2, html5lib=0.9999999=py27_0, icu=58.2=h9c2bf20_1, idna=2.6=py27h5722d68_1, imageio=2.3.0=py27_0, imagesize=1.0.0=py27_0, intel-openmp=2018.0.0=8, ipaddress=1.0.22=py27_0, ipykernel=4.8.2=py27_0, ipython=5.7.0=py27_0, ipython_genutils=0.2.0=py27h89fb69b_0, ipywidgets=7.2.1=py27_0, isort=4.3.4=py27_0, itsdangerous=0.24=py27hb8295c1_1, jbig=2.1=hdba287a_0, jdcal=1.4=py27_0, jedi=0.12.0=py27_1, jinja2=2.10=py27h4114e70_0, jpeg=9b=h024ee3a_2, jsonschema=2.6.0=py27h7ed5aa4_0, jupyter=1.0.0=py27_4, jupyter_client=5.2.3=py27_0, jupyter_console=5.2.0=py27hc6bee7e_1, jupyter_core=4.4.0=py27h345911c_0, jupyterlab=0.32.1=py27_0, jupyterlab_launcher=0.10.5=py27_0, kiwisolver=1.0.1=py27hc15e7b5_0, krb5=1.16.1=h173b8e3_7, lazy-object-proxy=1.3.1=py27h682c727_0, libcurl=7.64.0=h20c2e04_2, libedit=3.1.20170329=h6b74fdf_2, libffi=3.2.1=hd88cf55_4, libgcc-ng=8.2.0=hdf63c60_1, libgfortran-ng=7.2.0=hdf63c60_3, libpng=1.6.36=hbc83047_0, libprotobuf=3.6.0=hdbcaa40_0, libsodium=1.0.16=h1bed415_0, libssh2=1.8.0=h1ba5d50_4, libstdcxx-ng=8.2.0=hdf63c60_1, libtiff=4.0.9=he85c1e1_1, libtool=2.4.6=h544aabb_3, libuuid=1.0.3=h1bed415_2, libxcb=1.13=h1bed415_1, libxml2=2.9.8=h26e45fe_1, libxslt=1.1.32=h1312cb7_0, llvmlite=0.23.1=py27hdbcaa40_0, locket=0.2.0=py27h73929a2_1, lxml=4.2.1=py27h23eabaa_0, lzo=2.10=h49e0be7_2, markdown=3.0.1=py27_0, markupsafe=1.0=py27h97b2822_1, matplotlib=2.2.3=py27hb69df0a_0, mccabe=0.6.1=py27h0e7c7be_1, mistune=0.8.3=py27h14c3975_1, mkl=2018.0.2=1, mkl-service=1.1.2=py27hb2d42c5_4, mkl_fft=1.0.1=py27h3010b51_0, mkl_random=1.0.1=py27h629b387_0, more-itertools=4.1.0=py27_0, mpc=1.0.3=hec55b23_5, mpfr=3.1.5=h11a74b3_2, mpmath=1.0.0=py27h9669132_2, msgpack-python=0.5.6=py27h6bb024c_0, multipledispatch=0.5.0=py27_0, navigator-updater=0.2.1=py27_0, nbconvert=5.3.1=py27he041f76_0, nbformat=4.4.0=py27hed7f2b2_0, ncurses=6.1=hf484d3e_0, networkx=2.1=py27_0, ninja=1.8.2=py27h6bb024c_1, nltk=3.3.0=py27_0, nose=1.3.7=py27heec2199_2, notebook=5.5.0=py27_0, numba=0.38.0=py27h637b7d7_0, numexpr=2.6.5=py27h7bf3b9c_0, numpy=1.14.3=py27hcd700cb_1, numpy-base=1.14.3=py27h9be14a7_1, numpydoc=0.8.0=py27_0, odo=0.5.1=py27h9170de3_0, olefile=0.45.1=py27_0, openpyxl=2.5.3=py27_0, openssl=1.1.1b=h7b6447c_1, packaging=17.1=py27_0, pandas=0.23.0=py27h637b7d7_0, pandoc=1.19.2.1=hea2e7c5_1, pandocfilters=1.4.2=py27h428e1e5_1, pango=1.42.3=h8589676_0, parquet-cpp=1.5.1=2, parso=0.2.0=py27_0, partd=0.3.8=py27h4e55004_0, patchelf=0.9=hf79760b_2, path.py=11.0.1=py27_0, pathlib2=2.3.2=py27_0, patsy=0.5.0=py27_0, pcre=8.42=h439df22_0, pep8=1.7.1=py27_0, pexpect=4.5.0=py27_0, pickleshare=0.7.4=py27h09770e1_0, pillow=5.4.1=py27h34e0f95_0, pip=10.0.1=py27_0, pixman=0.34.0=hceecf20_3, pkginfo=1.4.2=py27_1, pluggy=0.6.0=py27h1f4f128_0, ply=3.11=py27_0, prompt_toolkit=1.0.15=py27h1b593e1_0, psutil=5.4.5=py27h14c3975_0, ptyprocess=0.5.2=py27h4ccb14c_0, py=1.5.3=py27_0, pyarrow=0.11.1=py27hfc679d8_0, pycairo=1.15.4=py27h1b9232e_1, pycodestyle=2.4.0=py27_0, pycosat=0.6.3=py27ha4109ae_0, pycparser=2.18=py27hefa08c5_1, pycrypto=2.6.1=py27h14c3975_8, pycurl=7.43.0.2=py27h1ba5d50_0, pyflakes=1.6.0=py27h904a57d_0, pygments=2.2.0=py27h4a8b6f5_0, pylint=1.8.4=py27_0, pyodbc=4.0.23=py27hf484d3e_0, pyopenssl=18.0.0=py27_0, pyparsing=2.2.0=py27hf1513f8_1, pyqt=5.9.2=py27h751905a_0, pysocks=1.6.8=py27_0, pytables=3.4.3=py27h02b9ad4_2, pytest=3.5.1=py27_0, python=2.7.15=h9bab390_6, python-dateutil=2.7.3=py27_0, pytorch=1.0.1=py2.7_cuda9.0.176_cudnn7.4.2_2, pytz=2018.4=py27_0, pywavelets=0.5.2=py27hecda097_0, pyyaml=3.12=py27h2d70dd7_1, pyzmq=17.0.0=py27h14c3975_1, qt=5.9.7=h5867ecd_1, qtawesome=0.4.4=py27hd7914c3_0, qtconsole=4.3.1=py27hc444b0d_0, qtpy=1.4.1=py27_0, readline=7.0=ha6073c6_4, requests=2.18.4=py27hc5b0589_1, rope=0.10.7=py27hfe459b0_0, ruamel_yaml=0.15.35=py27h14c3975_1, scandir=1.7=py27h14c3975_0, scikit-image=0.13.1=py27h14c3975_1, scikit-learn=0.19.1=py27h445a80a_0, scipy=1.1.0=py27hfc37229_0, seaborn=0.8.1=py27h633ea1e_0, send2trash=1.5.0=py27_0, setuptools=39.1.0=py27_0, simplegeneric=0.8.1=py27_2, singledispatch=3.4.0.3=py27h9bcb476_0, sip=4.19.8=py27hf484d3e_0, six=1.11.0=py27h5f960f1_1, snappy=1.1.7=hbae5bb6_3, snowballstemmer=1.2.1=py27h44e2768_0, sortedcollections=0.6.1=py27_0, sortedcontainers=1.5.10=py27_0, sphinx=1.7.4=py27_0, sphinxcontrib=1.0=py27h1512b58_1, sphinxcontrib-websupport=1.0.1=py27hf906f22_1, spyder=3.2.8=py27_0, sqlalchemy=1.2.7=py27h6b74fdf_0, sqlite=3.26.0=h7b6447c_0, ssl_match_hostname=3.5.0.1=py27h4ec10b9_2, statsmodels=0.9.0=py27h3010b51_0, subprocess32=3.5.0=py27h14c3975_0, sympy=1.1.1=py27hc28188a_0, tblib=1.3.2=py27h51fe5ba_0, tensorflow=1.12.0=gpu_py27h956c076_0, tensorflow-base=1.12.0=gpu_py27h8e0ae2d_0, terminado=0.8.1=py27_1, testpath=0.3.1=py27hc38d2c4_0, tk=8.6.8=hbc83047_0, toolz=0.9.0=py27_0, torchvision=0.2.2=py_3, tornado=5.0.2=py27_0, traitlets=4.3.2=py27hd6ce930_0, typing=3.6.4=py27_0, unicodecsv=0.14.1=py27h5062da9_0, unixodbc=2.3.6=h1bed415_0, urllib3=1.22=py27ha55213b_0, wcwidth=0.1.7=py27h9e3e1ab_0, webencodings=0.5.1=py27hff10b21_1, werkzeug=0.14.1=py27_0, wheel=0.31.1=py27_0, widgetsnbextension=3.2.1=py27_0, wrapt=1.10.11=py27h04f6869_0, xlrd=1.1.0=py27ha77178f_1, xlsxwriter=1.0.4=py27_0, xlwt=1.3.0=py27h3d85d97_0, xz=5.2.4=h14c3975_4, yaml=0.1.7=had09818_2, zeromq=4.2.5=h439df22_0, zict=0.1.3=py27h12c336c_0, zlib=1.2.11=ha838bed_2. And pip deps as: absl-py==0.5.0, backports-weakref==1.0.post1, gast==0.2.0, grpcio==1.15.0, hickle==3.4.3, keras-applications==1.0.6, keras-preprocessing==1.0.5, mock==2.0.0, pbr==4.2.0, protobuf==3.6.1, tensorboard==1.11.0, tensorflow-gpu==1.11.0, termcolor==1.1.0 For for historical models of 68 lakes for PGDL and DL; process-guided deep learning and deep learning predictions were generated with the following open source tools available in the Python install channels: pytorch, conda-forge, defaults. Python dependencies: feather-format=0.4.0=py36_2, arrow-cpp=0.9.0=py36h165c0fa_7, blas=1.0=mkl, boost-cpp=1.65.1=h14c3975_4, bzip2=1.0.6=h14c3975_5, ca-certificates=2018.03.07=0, certifi=2018.11.29=py36_0, cffi=1.11.5=py36he75722e_1, cudatoolkit=9.0=h13b8566_0, cudnn=7.1.2=cuda9.0_0, freetype=2.9.1=h8a8886c_1, icu=58.2=h9c2bf20_1, intel-openmp=2019.1=144, jpeg=9b=h024ee3a_2, libboost=1.65.1=habcd387_4, libedit=3.1.20170329=h6b74fdf_2, libevent=2.1.8=h1ba5d50_0, libffi=3.2.1=hd88cf55_4, libgcc-ng=8.2.0=hdf63c60_1, libgfortran-ng=7.3.0=hdf63c60_0, libpng=1.6.36=hbc83047_0, libprotobuf=3.5.2=h6f1eeef_0, libstdcxx-ng=8.2.0=hdf63c60_1, libtiff=4.0.9=he85c1e1_2, lz4-c=1.8.1.2=h14c3975_0, mkl=2018.0.3=1, mkl_fft=1.0.6=py36h7dd41cf_0, mkl_random=1.0.1=py36h4414c95_1, nccl=1.3.5=cuda9.0_0, ncurses=6.1=he6710b0_1, ninja=1.8.2=py36h6bb024c_1, numpy=1.15.4=py36h1d66e8a_0, numpy-base=1.15.4=py36h81de0dd_0, olefile=0.46=py36_0, openssl=1.1.1a=h7b6447c_0, pandas=0.23.4=py36h04863e7_0, parquet-cpp=1.4.0=h3238a2a_0, pillow=5.4.1=py36h34e0f95_0, pip=18.1=py36_0, pyarrow=0.9.0=py36hfc40096_2, pycparser=2.19=py36_0, python=3.6.8=h0371630_0, python-dateutil=2.7.5=py36_0, pytorch=0.4.1=py36ha74772b_0, pytz=2018.7=py36_0, readline=7.0=h7b6447c_5, scikit-learn=0.20.1=py36h4989274_0, scipy=1.1.0=py36hfa4b5c9_1, setuptools=40.6.3=py36_0, six=1.12.0=py36_0, snappy=1.1.7=hbae5bb6_3, sqlite=3.26.0=h7b6447c_0, thrift-cpp=0.11.0=h02b749d_3, tk=8.6.8=hbc83047_0, torchvision=0.2.1=py36_0, wheel=0.32.3=py36_0, xz=5.2.4=h14c3975_4, zlib=1.2.11=h7b6447c_3, zstd=1.3.3=h84994c4_0, cuda90=1.0=h6433d27_0</native>
    <crossref>
      <citeinfo>
        <origin>Matthew R. Hipsey</origin>
        <origin>Louise C. Bruce</origin>
        <origin>Casper Boon</origin>
        <origin>Brendan Busch</origin>
        <origin>Cayelan C. Carey</origin>
        <origin>David P. Hamilton</origin>
        <origin>Paul C. Hanson</origin>
        <origin>Jordan S. Read</origin>
        <origin>Eduardo de Sousa</origin>
        <origin>Michael Weber</origin>
        <origin>Luke A. Winslow</origin>
        <pubdate>2019</pubdate>
        <title>A General Lake Model (GLM 3.0) for linking with high-frequency sensor data from the Global Lake Ecological Observatory Network (GLEON).</title>
        <onlink>https://doi.org/10.5194/gmd-12-473-2019</onlink>
      </citeinfo>
    </crossref>
    <crossref>
      <citeinfo>
        <origin>Luke A. Winslow</origin>
        <origin>Gretchen J.A. Hansen</origin>
        <origin>Jordan S. Read</origin>
        <pubdate>2016</pubdate>
        <title>Data release: A large-scale database of modeled contemporary and future water temperature data for 10,774 Michigan, Minnesota and Wisconsin Lakes</title>
        <onlink>http://dx.doi.org/10.5066/F7DV1H10</onlink>
      </citeinfo>
    </crossref>
    <crossref>
      <citeinfo>
        <origin>Xiaowei Jia</origin>
        <origin>Jared Willard</origin>
        <origin>Anuj Karpatne</origin>
        <origin>Jordan S. Read</origin>
        <origin>Jacob A. Zwart</origin>
        <origin>Michael Steinbach</origin>
        <origin>Vipin Kumar</origin>
        <pubdate>2019</pubdate>
        <title>Physics Guided RNNs for Modeling Dynamical Systems: A Case Study in Simulating Lake Temperature Profiles. Retrieved from https://arxiv.org/abs/1810.13075v2</title>
        <onlink>https://arxiv.org/pdf/1810.02880.pdf</onlink>
      </citeinfo>
    </crossref>
    <crossref>
      <citeinfo>
        <origin>USGS Advanced Research Computing</origin>
        <pubdate>2019</pubdate>
        <title>USGS Yeti Supercomputer</title>
        <onlink>https://doi.org/10.5066/F7D798MJ</onlink>
      </citeinfo>
    </crossref>
  </idinfo>
  <dataqual>
    <attracc>
      <attraccr>No formal attribute accuracy tests were conducted.</attraccr>
    </attracc>
    <logic>Not applicable</logic>
    <complete>Not applicable</complete>
    <posacc>
      <horizpa>
        <horizpar>A formal accuracy assessment of the horizontal positional information in the dataset was not conducted.</horizpar>
      </horizpa>
      <vertacc>
        <vertaccr>A formal accuracy assessment of the vertical positional information in the dataset was not conducted.</vertaccr>
      </vertacc>
    </posacc>
    <lineage>
      <procstep>
        <procdesc>At the core of the modeling framework is a lake hydrodynamic model that uses inputs of lake-specific properties and local meteorology to estimate water temperature. Our chosen model is the open source, General Lake Model (GLM) version 2. GLM is a one-dimensional dynamical model which simplifies lakes using a vertical approximation, where horizontal variability is ignored. GLM uses a Lagrangian approach to layer structure where layers can split and combine based on changing vertical gradients. GLM is a modern, implementation of other one-dimensional models. We used GLM to run individual lake simulations according to the processes described in Winslow et al. 2017. Outputs for water temperature were extracted at various depths and written or summarized to the files included in this set of data. The glmtools R package was used for this processing.</procdesc>
        <procdate/>
      </procstep>
    </lineage>
  </dataqual>
  <spdoinfo>
    <indspref/>
    <direct>Point</direct>
    <ptvctinf>
      <sdtsterm>
        <sdtstype>G-polygon</sdtstype>
        <ptvctcnt>68</ptvctcnt>
      </sdtsterm>
    </ptvctinf>
  </spdoinfo>
  <spref>
    <horizsys>
      <geograph>
        <latres/>
        <longres/>
        <geogunit>Decimal degrees</geogunit>
      </geograph>
      <geodetic>
        <horizdn>North American Datum of 1983</horizdn>
        <ellips>Geodetic Reference System 80</ellips>
        <semiaxis>6378137.0</semiaxis>
        <denflat>298.257</denflat>
      </geodetic>
    </horizsys>
  </spref>
  <eainfo>
    <detailed>
      <enttyp>
        <enttypl>nhd_{ID}_predict_pb.csv</enttypl>
        <enttypd>Calibrated process-based model predictions during historical conditions</enttypd>
        <enttypds>Producer Defined</enttypds>
      </enttyp>
      <attr>
        <attrlabl>date</attrlabl>
        <attrdef>Calendar date</attrdef>
        <attrdefs>NA</attrdefs>
        <attrdomv>
          <rdom>
            <rdommin>NA</rdommin>
            <rdommax>NA</rdommax>
            <attrunit>NA</attrunit>
          </rdom>
        </attrdomv>
      </attr>
      <attr>
        <attrlabl>temp_z</attrlabl>
        <attrdef>temperature at depth 'z' in meters</attrdef>
        <attrdefs>This data release; there are multiple columns that use this format to specify temperature at different depths</attrdefs>
        <attrdomv>
          <rdom>
            <rdommin>NA</rdommin>
            <rdommax>NA</rdommax>
            <attrunit>degrees C</attrunit>
          </rdom>
        </attrdomv>
      </attr>
      <attr>
        <attrlabl>exper_n</attrlabl>
        <attrdef>experiment number</attrdef>
        <attrdefs>This data release</attrdefs>
        <attrdomv>
          <rdom>
            <rdommin>1</rdommin>
            <rdommax>5</rdommax>
            <attrunit>NA</attrunit>
          </rdom>
        </attrdomv>
      </attr>
      <attr>
        <attrlabl>exper_id</attrlabl>
        <attrdef>Type of experiment run and number of training profiles used: 'experiment_profiles'</attrdef>
        <attrdefs>This data release</attrdefs>
        <attrdomv>
          <rdom>
            <rdommin>NA</rdommin>
            <rdommax>NA</rdommax>
            <attrunit>NA</attrunit>
          </rdom>
        </attrdomv>
      </attr>
    </detailed>
    <detailed>
      <enttyp>
        <enttypl>nhd_{ID}_predict_pb0.csv</enttypl>
        <enttypd>Unalibrated process-based model predictions during historical conditions</enttypd>
        <enttypds>Producer Defined</enttypds>
      </enttyp>
      <attr>
        <attrlabl>date</attrlabl>
        <attrdef>Calendar date</attrdef>
        <attrdefs>NA</attrdefs>
        <attrdomv>
          <rdom>
            <rdommin>NA</rdommin>
            <rdommax>NA</rdommax>
            <attrunit>NA</attrunit>
          </rdom>
        </attrdomv>
      </attr>
      <attr>
        <attrlabl>temp_z</attrlabl>
        <attrdef>temperature at depth 'z' in meters</attrdef>
        <attrdefs>This data release; there are multiple columns that use this format to specify temperature at different depths</attrdefs>
        <attrdomv>
          <rdom>
            <rdommin>NA</rdommin>
            <rdommax>NA</rdommax>
            <attrunit>degrees C</attrunit>
          </rdom>
        </attrdomv>
      </attr>
      <attr>
        <attrlabl>exper_n</attrlabl>
        <attrdef>experiment number</attrdef>
        <attrdefs>This data release</attrdefs>
        <attrdomv>
          <rdom>
            <rdommin>1</rdommin>
            <rdommax>5</rdommax>
            <attrunit>NA</attrunit>
          </rdom>
        </attrdomv>
      </attr>
      <attr>
        <attrlabl>exper_id</attrlabl>
        <attrdef>Type of experiment run and number of training profiles used: 'experiment_profiles'</attrdef>
        <attrdefs>This data release</attrdefs>
        <attrdomv>
          <rdom>
            <rdommin>NA</rdommin>
            <rdommax>NA</rdommax>
            <attrunit>NA</attrunit>
          </rdom>
        </attrdomv>
      </attr>
    </detailed>
    <detailed>
      <enttyp>
        <enttypl>nhd_{ID}_predict_dl.csv</enttypl>
        <enttypd>Deep learning model predictions during historical conditions</enttypd>
        <enttypds>Producer Defined</enttypds>
      </enttyp>
      <attr>
        <attrlabl>date</attrlabl>
        <attrdef>Calendar date</attrdef>
        <attrdefs>NA</attrdefs>
        <attrdomv>
          <rdom>
            <rdommin>NA</rdommin>
            <rdommax>NA</rdommax>
            <attrunit>NA</attrunit>
          </rdom>
        </attrdomv>
      </attr>
      <attr>
        <attrlabl>temp_z</attrlabl>
        <attrdef>temperature at depth 'z' in meters</attrdef>
        <attrdefs>This data release; there are multiple columns that use this format to specify temperature at different depths</attrdefs>
        <attrdomv>
          <rdom>
            <rdommin>NA</rdommin>
            <rdommax>NA</rdommax>
            <attrunit>degrees C</attrunit>
          </rdom>
        </attrdomv>
      </attr>
      <attr>
        <attrlabl>exper_n</attrlabl>
        <attrdef>experiment number</attrdef>
        <attrdefs>This data release</attrdefs>
        <attrdomv>
          <rdom>
            <rdommin>1</rdommin>
            <rdommax>5</rdommax>
            <attrunit>NA</attrunit>
          </rdom>
        </attrdomv>
      </attr>
      <attr>
        <attrlabl>exper_id</attrlabl>
        <attrdef>Type of experiment run and number of training profiles used: 'experiment_profiles'</attrdef>
        <attrdefs>This data release</attrdefs>
        <attrdomv>
          <rdom>
            <rdommin>NA</rdommin>
            <rdommax>NA</rdommax>
            <attrunit>NA</attrunit>
          </rdom>
        </attrdomv>
      </attr>
    </detailed>
    <detailed>
      <enttyp>
        <enttypl>nhd_{ID}_predict_pgdl.csv</enttypl>
        <enttypd>Process-guided deep learning model predictions during historical conditions</enttypd>
        <enttypds>Producer Defined</enttypds>
      </enttyp>
      <attr>
        <attrlabl>date</attrlabl>
        <attrdef>Calendar date</attrdef>
        <attrdefs>NA</attrdefs>
        <attrdomv>
          <rdom>
            <rdommin>NA</rdommin>
            <rdommax>NA</rdommax>
            <attrunit>NA</attrunit>
          </rdom>
        </attrdomv>
      </attr>
      <attr>
        <attrlabl>temp_z</attrlabl>
        <attrdef>temperature at depth 'z' in meters</attrdef>
        <attrdefs>This data release; there are multiple columns that use this format to specify temperature at different depths</attrdefs>
        <attrdomv>
          <rdom>
            <rdommin>NA</rdommin>
            <rdommax>NA</rdommax>
            <attrunit>degrees C</attrunit>
          </rdom>
        </attrdomv>
      </attr>
      <attr>
        <attrlabl>exper_n</attrlabl>
        <attrdef>experiment number</attrdef>
        <attrdefs>This data release</attrdefs>
        <attrdomv>
          <rdom>
            <rdommin>1</rdommin>
            <rdommax>5</rdommax>
            <attrunit>NA</attrunit>
          </rdom>
        </attrdomv>
      </attr>
      <attr>
        <attrlabl>exper_id</attrlabl>
        <attrdef>Type of experiment run and number of training profiles used: 'experiment_profiles'</attrdef>
        <attrdefs>This data release</attrdefs>
        <attrdomv>
          <rdom>
            <rdommin>NA</rdommin>
            <rdommax>NA</rdommax>
            <attrunit>NA</attrunit>
          </rdom>
        </attrdomv>
      </attr>
    </detailed>
  </eainfo>
  <distinfo>
    <distrib>
      <cntinfo>
        <cntorgp>
          <cntorg>U.S. Geological Survey</cntorg>
          <cntper>GS ScienceBase</cntper>
        </cntorgp>
        <cntaddr>
          <addrtype>mailing address</addrtype>
          <address>Denver Federal Center, Building 810, Mail Stop 302</address>
          <city>Denver</city>
          <state>CO</state>
          <postal>80255</postal>
          <country>United States</country>
        </cntaddr>
        <cntvoice>1-888-275-8747</cntvoice>
        <cntemail>sciencebase@usgs.gov</cntemail>
      </cntinfo>
    </distrib>
    <distliab>Unless otherwise stated, all data, metadata and related materials are considered to satisfy the quality standards relative to the purpose for which the data were collected. Although these data and associated metadata have been reviewed for accuracy and completeness and approved for release by the U.S. Geological Survey (USGS), no warranty expressed or implied is made regarding the display or utility of the data on any other system or for general or scientific purposes, nor shall the act of distribution constitute any such warranty.</distliab>
    <stdorder>
      <digform>
        <digtinfo>
          <formname/>
        </digtinfo>
        <digtopt>
          <onlinopt>
            <computer>
              <networka>
                <networkr>http://dx.doi.org/10.5066/P9AQPIVD</networkr>
              </networka>
            </computer>
          </onlinopt>
        </digtopt>
      </digform>
      <fees>None</fees>
    </stdorder>
  </distinfo>
  <metainfo>
    <metd>20191014</metd>
    <metc>
      <cntinfo>
        <cntperp>
          <cntper>Jordan S. Read</cntper>
          <cntorg>U.S. Geological Survey</cntorg>
        </cntperp>
        <cntpos>Research Civil Engineer</cntpos>
        <cntaddr>
          <addrtype>Mailing and Physical</addrtype>
          <address>8505 Research Way</address>
          <city>Middleton</city>
          <state>WI</state>
          <postal>53562</postal>
          <country>U.S.A.</country>
        </cntaddr>
        <cntvoice>608-821-3922</cntvoice>
        <cntfax>608-821-3817</cntfax>
        <cntemail>jread@usgs.gov</cntemail>
      </cntinfo>
    </metc>
    <metstdn>FGDC Biological Data Profile of the Content Standard for Digital Geospatial Metadata</metstdn>
    <metstdv>FGDC-STD-001.1-1999</metstdv>
  </metainfo>
</metadata>
